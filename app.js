import { SubmissionStream } from "snoostorm";
import Snoowrap from "snoowrap";
import 'dotenv/config'

const credentials = {
    "userAgent":    "automod-OPTN-bot:v0.0.3",
    "clientId":     process.env.REDDIT_CLIENT_ID,
    "clientSecret": process.env.REDDIT_CLIENT_SECRET,
    "username":     process.env.REDDIT_USERNAME,
    "password":     process.env.REDDIT_PASSWORD
}

const client = new Snoowrap(credentials)

const BOT_START = Date.now() / 1000
const forzaOpenTunes = { subreddit: "OptnTools", limit: 50, pollTime: 3000 }
const granTurismoOpenTunes = { subreddit: "GranTurismoOpenTunes", limit: 50, pollTime: 3000 }

new SubmissionStream(client, forzaOpenTunes).on('item', (post) => {
    if (post.created_utc < BOT_START) return

    post.reply(OptnBot.forzaOpenTunesMessage(post))
    console.log(post)
})

new SubmissionStream(client, granTurismoOpenTunes).on('item', (post) => {
    if (post.created_utc < BOT_START) return

    post.reply(OptnBot.granTurismoOpenTunesMessage())
    console.log(post)
})

class OptnBot {
    static fancyPantsTag = "Formatted text generated by the [<a href=\"https://OPTN.club\">OPTN.club</a> Tune Formatter](<a href=\"https://optn.club/formatter\">https://optn.club/formatter</a>)"
    static tuneFormatterTag = "Formatted text generated by the <a href=\"https://optn.club/formatter\">OPTN.club Tune Formatter</a>"
    
    static staticMessage(game) { 
        return `*Come join the [OPTN Discord server!](https://discord.gg/OPTN) Once you get in, be sure to visit the Rules-and-Roles channel and pick up the ${game} role there.*\n`
    }

    static fancyPantsWarning = "**Oh no! You posted in Fancy Pants Editor mode. To make sure your tune is formatted correctly, please edit your post and switch to Markdown mode. You should see \"Switch to markdown Mode\" on the right side of the textbox navbar.** \n\n"
    static tuneFormatterText = "**Thank you for using the OPTN tune formatter! Report any bugs or issues on the OPTN-Club github, or message one of the admins.** \n\n"
    
    static footer = "***\n^Visit ^https://optn.club/ ^for ^a ^tune ^formatter, ^tune ^calculator, ^and ^tuning ^guide."

    static forzaOpenTunesMessage(post) {
        const postText = post.selftext_html
        let checkTune = ""
        if (postText.includes(this.fancyPantsTag)) {
            console.log("Fancypants text detected.")
            checkTune = this.fancyPantsWarning
        } else if (postText.includes(this.tuneFormatterTag)) {
            console.log("Good tune detected.")
            checkTune = this.tuneFormatterText
        }
        return `${checkTune}\n\n${this.staticMessage("Forza Horizon")}\n\n${this.footer}`
    }

    static granTurismoOpenTunesMessage(){
        return `${this.staticMessage("Gran Turismo")}\n\n${this.footer}`
    }
}

















// const getAutoReply = async () => {
//     let data = "(Empty data)"
//     try {        if (post.created_utc < BOT_START) return

//         const response = await fetch('https://raw.githubusercontent.com/OPTN-Club/OPTN-reddit-bot/main/auto_reply_post.txt')
//         if (!response.ok) {
//             throw (new Error(`${response.status} (${response.statusText})`))
//         }
//         data = await response.text()
//     } catch (error) {
//         console.error(`Error in fetch: ${error.message}`)
//     }
//     return data
// }


// let savedFancyPantsPosts = ["whbc4b"]

// setInterval(() => {
//     for (let postId of savedFancyPantsPosts) {
//         const submission = client.getSubmission(postId)
//         submission.selftext_html.then(function (postBody) {
//             if (postBody !== null && submission.edited &&
//                 postBody.includes("<p><a href=\"https://optn.club/formatter\">View this tune on optn.club</a></p>")) {
//                 console.log("Fixed!")
//             } else {
//                 console.log("Unfixed.")
//             }
//         })
//     }
// }, 10000)


